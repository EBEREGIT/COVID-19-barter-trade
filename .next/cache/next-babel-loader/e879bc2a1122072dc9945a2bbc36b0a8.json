{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport mongoose from 'mongoose';\n\nrequire('dotenv').config();\n\nvar connection = {};\n\nfunction dbConnect() {\n  var db;\n  return _regeneratorRuntime.async(function dbConnect$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!connection.isConnected) {\n            _context.next = 2;\n            break;\n          }\n\n          return _context.abrupt(\"return\");\n\n        case 2:\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(mongoose.connect(process.env.MONGO_URI, {\n            useNewUrlParser: true,\n            useUnifiedTopology: true\n          }));\n\n        case 4:\n          db = _context.sent;\n          connection.isConnected = db.connections[0].readyState;\n          console.log(connection.isConnected);\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexport default dbConnect;","map":{"version":3,"sources":["C:/nextjs/covid-19-barter-trade/utils/dbConnect.js"],"names":["mongoose","require","config","connection","dbConnect","isConnected","connect","process","env","MONGO_URI","useNewUrlParser","useUnifiedTopology","db","connections","readyState","console","log"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,UAArB;;AACAC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEA,IAAMC,UAAU,GAAG,EAAnB;;AAEA,SAAeC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACQD,UAAU,CAACE,WADnB;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,2CAKqBL,QAAQ,CAACM,OAAT,CAAiBC,OAAO,CAACC,GAAR,CAAYC,SAA7B,EAAwC;AACrDC,YAAAA,eAAe,EAAE,IADoC;AAErDC,YAAAA,kBAAkB,EAAE;AAFiC,WAAxC,CALrB;;AAAA;AAKUC,UAAAA,EALV;AAUIT,UAAAA,UAAU,CAACE,WAAX,GAAyBO,EAAE,CAACC,WAAH,CAAe,CAAf,EAAkBC,UAA3C;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYb,UAAU,CAACE,WAAvB;;AAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAcA,eAAeD,SAAf","sourcesContent":["import mongoose from 'mongoose';\r\nrequire('dotenv').config()\r\n\r\nconst connection = {};\r\n\r\nasync function dbConnect(){\r\n    if (connection.isConnected){\r\n        return;\r\n    }\r\n    \r\n    const db = await mongoose.connect(process.env.MONGO_URI, {\r\n        useNewUrlParser: true,\r\n        useUnifiedTopology: true,\r\n    });\r\n\r\n    connection.isConnected = db.connections[0].readyState;\r\n    console.log(connection.isConnected);\r\n}\r\n\r\nexport default dbConnect;"]},"metadata":{},"sourceType":"module"}