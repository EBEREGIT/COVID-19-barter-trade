{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar mongoose = require('mongoose');\n\nvar connection = {};\n\nfunction dbConnect() {\n  var db;\n  return _regeneratorRuntime.async(function dbConnect$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!connection.isConnected) {\n            _context.next = 2;\n            break;\n          }\n\n          return _context.abrupt(\"return\");\n\n        case 2:\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(mongoose.connect(\"mongodb+srv://Ebere:qWjOLsZTlMxY0uHM@cluster0-ev2sa.mongodb.net/test?retryWrites=true&w=majority\", {\n            useNewUrlParser: true,\n            useUnifiedTopology: true\n          }));\n\n        case 4:\n          db = _context.sent;\n          mongoose.connection.on('connected', function () {\n            return console.log('Connected');\n          });\n          mongoose.connection.on('error', function () {\n            return console.log('Connection failed with - ', err);\n          });\n          connection.isConnected = db.connections[0].readyState;\n          console.log(connection.isConnected);\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexport default dbConnect;","map":{"version":3,"sources":["C:/nextjs/covid-19-barter-trade/utils/dbConnect.js"],"names":["mongoose","require","connection","dbConnect","isConnected","connect","useNewUrlParser","useUnifiedTopology","db","on","console","log","err","connections","readyState"],"mappings":";;AAAA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AAEA,IAAMC,UAAU,GAAG,EAAnB;;AAEA,SAAeC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACQD,UAAU,CAACE,WADnB;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,2CAKqBJ,QAAQ,CAACK,OAAT,CAAiB,kGAAjB,EAAqH;AAClIC,YAAAA,eAAe,EAAE,IADiH;AAElIC,YAAAA,kBAAkB,EAAE;AAF8G,WAArH,CALrB;;AAAA;AAKUC,UAAAA,EALV;AAUIR,UAAAA,QAAQ,CAACE,UAAT,CAAoBO,EAApB,CAAuB,WAAvB,EAAoC;AAAA,mBAAMC,OAAO,CAACC,GAAR,CAAY,WAAZ,CAAN;AAAA,WAApC;AACJX,UAAAA,QAAQ,CAACE,UAAT,CAAoBO,EAApB,CAAuB,OAAvB,EAAgC;AAAA,mBAAMC,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAwCC,GAAxC,CAAN;AAAA,WAAhC;AAEIV,UAAAA,UAAU,CAACE,WAAX,GAAyBI,EAAE,CAACK,WAAH,CAAe,CAAf,EAAkBC,UAA3C;AACAJ,UAAAA,OAAO,CAACC,GAAR,CAAYT,UAAU,CAACE,WAAvB;;AAdJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAiBA,eAAeD,SAAf","sourcesContent":["const mongoose = require('mongoose');\r\n\r\nconst connection = {};\r\n\r\nasync function dbConnect(){\r\n    if (connection.isConnected){\r\n        return;\r\n    }\r\n\r\n    const db = await mongoose.connect(\"mongodb+srv://Ebere:qWjOLsZTlMxY0uHM@cluster0-ev2sa.mongodb.net/test?retryWrites=true&w=majority\", {\r\n        useNewUrlParser: true,\r\n        useUnifiedTopology: true,\r\n    });\r\n\r\n    mongoose.connection.on('connected', () => console.log('Connected'));\r\nmongoose.connection.on('error', () => console.log('Connection failed with - ',err));\r\n\r\n    connection.isConnected = db.connections[0].readyState;\r\n    console.log(connection.isConnected);\r\n}\r\n\r\nexport default dbConnect;"]},"metadata":{},"sourceType":"module"}