{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar mongoose = require('mongoose');\n\nvar connection = {};\n\nfunction dbConnect() {\n  var db;\n  return _regeneratorRuntime.async(function dbConnect$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!connection.isConnected) {\n            _context.next = 2;\n            break;\n          }\n\n          return _context.abrupt(\"return\");\n\n        case 2:\n          console.log(process.env.MONGO_URI);\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(mongoose.connect(process.env.MONGO_URI, {\n            useNewUrlParser: true,\n            useUnifiedTopology: true\n          }));\n\n        case 5:\n          db = _context.sent;\n          connection.isConnected = db.connections[0].readyState;\n          console.log(connection.isConnected);\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexport default dbConnect;","map":{"version":3,"sources":["C:/nextjs/covid-19-barter-trade/utils/dbConnect.js"],"names":["mongoose","require","connection","dbConnect","isConnected","console","log","process","env","MONGO_URI","connect","useNewUrlParser","useUnifiedTopology","db","connections","readyState"],"mappings":";;AAAA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AAEA,IAAMC,UAAU,GAAG,EAAnB;;AAEA,SAAeC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACQD,UAAU,CAACE,WADnB;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAKIC,UAAAA,OAAO,CAACC,GAAR,CAAYC,OAAO,CAACC,GAAR,CAAYC,SAAxB;AALJ;AAAA,2CAMqBT,QAAQ,CAACU,OAAT,CAAiBH,OAAO,CAACC,GAAR,CAAYC,SAA7B,EAAwC;AACrDE,YAAAA,eAAe,EAAE,IADoC;AAErDC,YAAAA,kBAAkB,EAAE;AAFiC,WAAxC,CANrB;;AAAA;AAMUC,UAAAA,EANV;AAWIX,UAAAA,UAAU,CAACE,WAAX,GAAyBS,EAAE,CAACC,WAAH,CAAe,CAAf,EAAkBC,UAA3C;AACAV,UAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAU,CAACE,WAAvB;;AAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAeA,eAAeD,SAAf","sourcesContent":["const mongoose = require('mongoose');\r\n\r\nconst connection = {};\r\n\r\nasync function dbConnect(){\r\n    if (connection.isConnected){\r\n        return\r\n    }\r\n\r\n    console.log(process.env.MONGO_URI)\r\n    const db = await mongoose.connect(process.env.MONGO_URI, {\r\n        useNewUrlParser: true,\r\n        useUnifiedTopology: true,\r\n    });\r\n\r\n    connection.isConnected = db.connections[0].readyState;\r\n    console.log(connection.isConnected);\r\n}\r\n\r\nexport default dbConnect;"]},"metadata":{},"sourceType":"module"}